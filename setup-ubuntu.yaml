---
- name: Install Docker
  hosts: broker-only
  vars:
      CTOP_VERSION: "0.7.3"
      USER: "eventsadmusr"
      restart: false
      DOCKER_PREREQUISITES:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      DOCKER:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  tasks:
  - name: Update apt packages
    apt:
      update_cache: "yes"
      force_apt_get: "yes"

  - name: Install packages needed for python
    apt:
      name: "python3"
      state: present
      force_apt_get: "yes"
  #This package was needed otherwise docker could not be started remotely and it was complaining with an error.
  - name: Install python docker
    apt:
      name: "python-docker"
      state: present
      force_apt_get: "yes"


  - name: Install packages needed for Docker
    apt:
      name: "{{ DOCKER_PREREQUISITES }}"
      state: present
      force_apt_get: "yes"

  - name: Save the current Ubuntu release version into a variable
    shell: lsb_release -cs
    register: ubuntu_version

  - name: Add Docker's official apt key.
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      state: present
    register: add_key
    ignore_errors: true

  - name: print the add_key
    debug:
       var: add_key
       var: ubuntu_version
       var: ubuntu_version.stdout


  - name: Add Docker apt key if failed
    shell: "curl -sSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
    args:
      warn: no
    when: add_key.failed

  - name: Add Docker Repository
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
      state: present

  - name: Add key Docker Repository
    apt:
      name: "{{ DOCKER }}"
      state: present
      force_apt_get: "yes"


  - name: Check for the latest docker compose version
    uri:
      url: https://api.github.com/repos/docker/compose/releases/latest
      return_content: no
    register: docker_compose_api_call

  - name: print the add_key
    debug:
       var: docker_compose_api_call.json.name

  - name: Install Docker Compose
    get_url:
      url: https://github.com/docker/compose/releases/download/{{ docker_compose_api_call.json.name }}/docker-compose-Linux-x86_64
      dest: "/usr/local/bin/docker-compose"
      mode: 0755

  - name: Install Ctop
    get_url:
      url: https://github.com/bcicen/ctop/releases/download/v{{ CTOP_VERSION }}/ctop-{{ CTOP_VERSION }}-linux-amd64
      dest: "/usr/local/bin/ctop"
      mode: 0755

  - name: Create docker group
    group:
      name: "docker"
      state: present

  - name: Adding user {{ USER }} to docker group
    user:
      name: "{{ USER }}"
      groups: "docker"
      append: "yes"

  - name: Enable docker service at boot
    service:
      name: docker
      state: started
      enabled: yes

  - name: Reboot server in order for changes to take place
    shell: "sleep 1 && reboot"
    async: 1
    poll: 0

...
